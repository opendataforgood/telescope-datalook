
@mixin cf {
    /* For modern browsers */
    &:before, &:after {
        content: "";
        display: table;
    }
    &:after {
        clear: both;
    }
    /* For IE 6/7 (trigger hasLayout) */
    zoom: 1;
}


/*================ FUNCTIONS =================*/
@function black($opacity) {
    @return rgba(0, 0, 0, $opacity);
}

@function white($opacity) {
    @return rgba(255, 255, 255, $opacity);
}

@function red($opacity) {
    @return rgba($red, $opacity);
}


/*================ MIXINS =================*/
@mixin vcenter {
    position: relative;
    top: 50%;
    transform: translateY(-50%);
}

@mixin animate($property: all) {
    @include single-transition($property, 300ms, 0ms, ease-out);
}

@mixin nav-ul {
    list-style-type: none;
    padding: 0;
    margin: 0;
    @include cf;

    li {
        display: block;
        float: left;
        &:last-child {
            margin-right: 0;
        }
    }
}

@mixin hide-text {
    text-indent: 100%;
    white-space: nowrap;
    overflow: hidden;
}

@mixin hide-text2 {
    font: 0/0 a;
    text-shadow: none;
    color: transparent;
}

@mixin letterpress($opacity) {
    text-shadow: white($opacity) 0 1px 0;
}

@mixin box-emboss($opacity, $opacity2) {
    box-shadow: white($opacity) 0 1px 0, inset black($opacity2) 0 1px 0;
}

@mixin breakpoint($point) {
    @if $point==wide {
        @media (max-width: 9999px) {
            @content;
        }
    }
    @if $point==large {
        @media (max-width: 1200px) {
            @content;
        }
    }
    @if $point==tablet {
        @media (max-width: 800px) {
            @content;
        }
    }
    @else if $point==phone {
        @media (max-width: 320px) {
            @content;
        }
    }
}

// http://blackbe.lt/useful-sass-mixins-css-trangle/
@mixin triangle($dir, $size, $color) {
    border: $size transparent solid;
    @if ($dir=="top" or $dir=="up" or $dir=="left" or $dir=="before") {
        &:before {
            @if ($dir=="top" or $dir=="up") {
                border-bottom-color: $color;
            }
            @else if ($dir=="right" or $dir=="after") {
                border-left-color: $color;
            }
        }
    }
    @else if ($dir=="bottom" or $dir=="down" or $dir=="left" or $dir=="before") {
        &:after {
            @if ($dir=="bottom" or $dir=="down") {
                border-top-color: $color;
            }
            @else if ($dir=="left" or $dir=="before") {
                border-right-color: $color;
            }
        }
    }
}


/*================ CLASSES =================*/
.popover {
    background: white;
    border: 1px solid $brand-primary;
    border-radius: 3px;
    box-shadow: 0 1px 2px 0 rgba(black, .25);
    z-index: 100;
    transition: all 300ms;
}

%content-container {
    background: #fff;
    box-shadow: 0 1px 1px 1px rgba(black, .15);
    padding: 1em 3em 3em 3em;
    margin-top: 1.5em;
    margin-bottom: 4em;

    @include small {
        padding: 1em 2em 3em 2em;
    }
}

.grid-block {
    background: #fff;
    padding: $grid-padding;
    border-radius: 3px;
    margin-bottom: $grid-margin;
    box-shadow: 0 1px 1px 1px black(.15);
}

.has-shadow {
    box-shadow: 0 1px 1px black(.15);
}

.cf {
    @include cf;
}

%vcenter {
    @include vcenter;
}


@mixin arrow($size, $color, $direction: up, $height: $size, $width: $size, $equilateral: true) {
    width: 0;
    height: 0;
    border: solid transparent;

    @if $direction == up {
        border-width: 0 $width $height $width;
        border-bottom-color: $color;

        @if $equilateral == true {
            border-bottom-width: $size * 2 * .866;
        }
    }

    @if $direction == down {
        border-width: $height $width 0 $width;
        border-top-color: $color;

        @if $equilateral == true {
            border-top-width: $size * 2 * .866;
        }
    }

    @if $direction == left {
        border-width: $height $width $height 0;
        border-right-color: $color;

        @if $equilateral == true {
            border-right-width: $size * 2 * .866;
        }
    }

    @if $direction == right {
        border-width: $height 0 $height $width;
        border-left-color: $color;

        @if $equilateral == true {
            border-left-width: $size * 2 * .866;
        }
    }
}

@mixin truncate($max: 100%) {
    display: inline-block;
    max-width: $max;
    text-overflow: ellipsis;
    overflow: hidden;
    white-space: nowrap;
}